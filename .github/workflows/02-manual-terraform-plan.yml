
# This is a basic workflow that is manually triggered

name: 02-manual-terraform-plan

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs: 
      aws_region:
        description: 'AWS region'
        required: true
        default: 'us-east-1'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME : ${{ secrets.TF_STATE_BUCKET_NAME }}

jobs:

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: plan
    env:
      AWS_DEFAULT_REGION: ${{ github.event.inputs.aws_region }}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET_NAME }}"
      working-directory: ./iac
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./iac
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./iac

